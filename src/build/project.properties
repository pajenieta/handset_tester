### Project 
project.version=1.0.0
project.artifactId=${ant.project.name}
project.groupId=org.edc

vendor=edc.org
midlet.name=${project.artifactId}

### Execution entry point
project.mainClass=${project.groupId}.HandsetTester

### Paths
project.build.sourceDirectory=src/main/java
project.build.directory=target
project.build.outputDirectory=${project.build.directory}/classes

project.build.testSourceDirectory=src/test/java
project.build.testOutputDirectory=${project.build.directory}/test-classes

### Note that in maven, project.build.resources is a list, and the first
# directory is ${project.build.resources[0]}. That syntax does not work in ant.
# So we approximate with a single resource dir in the conventional spot.
project.build.resources=src/main/resources

### NOTE: the nokia emulator does not work if the jad and jar files do not
# have the exact same root filename (minus .ja? suffix). Therefore, we cannot
# use a NAME-VERSION.jar filename unless we use the same naming convention for
# the jad. For now, leave off the version number.
jarfile=${project.build.directory}/${midlet.name}.jar
jadfile=${project.build.directory}/${midlet.name}.jad

### Code Signing Properties
# By default, do NOT sign the jar.
# Define keystore.pass and code_signing_key.pass in user.properties
sign.app=false
keystore.dir=src/build/keystore
keystore.file=${keystore.dir}/code_signing_keystore.jks

### Try the root cert instead
#code_signing_cert.alias=edc_code_signing_cert
code_signing_cert.alias=edc_root_code_cert

app.permissions=javax.microedition.io.Connector.file.read

###
### Dependencies
###
lib.dir=${basedir}/lib

junit.version=3.8.2
junit.jar=${lib.dir}/junit-${junit.version}.jar

antenna.version=1.0.2
proguard.version=4.4
antenna.jar=${lib.dir}/antenna-${antenna.version}.jar


### If true, keep wav files in the output jar. If false, 
include.wav.files.in.jar=false

#
# wtkobfuscate expects to find a proguard jar in:
#     ${wtk.proguard.home}/lib/proguard.jar.
#
# If we set the proguard home to the build basedir, that will work because we
# fetch proguard. If you want to use a different proguard location, set
# the wtk.proguard.home property (this must be set because this is the
# property that wtkobfuscate uses -- not proguard.jar)
#
wtk.proguard.home=${basedir}
proguard.jar=${wtk.proguard.home}/lib/proguard.jar

### for debugging, set gammu to "echo":
# gammu.bin=echo
gammu.bin=gammu

### These directories must first exist on the phone:
inst.dir.signed=a:/hts
inst.dir.unsigned=a:/htu

### build/exec customizations

### wtkrun does not really work if this is false (maybe if other settings are tweaked?)
wtk.run.wait=true

### The samsung emulator bombs when heapsize <= 1M OR heapsize >= 8M. 4M works OK.
emulator.heapsize=4M

### This is the device that will be emulated when we run:
device=DefaultColorPhone

### This is the minimum MIDP version that we will be supporting. Set the build
# and emulator to require this level of compatibility
wtk.midp.version=2.0
wtk.cldc.version=1.1

### Set build.sysclasspath to suppress ant warnings. 
# ignore means we got the classpath right and we do not want ant to change it. 
build.sysclasspath=ignore

### A list of emulators that do not properly support parameterizing the device
noDeviceParamEmulators=nokias40

### App properties (override in your user properties file)
log.level=ERROR
